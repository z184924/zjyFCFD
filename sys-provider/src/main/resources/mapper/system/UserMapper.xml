<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
	<sql id="userColumns">USER_ID,USERNAME,PASSWORD,NAME,COMPANY_ID,ISADMIN,SORTNUM,LAST_LOGIN,STATE</sql>
	<!-- 将vo实体类转换为映射文件 ，因为在mybatis-config的配置文件中已经用了别名，因此这里可以这样写：type="User"-->
	
	<resultMap type="cn.zhangjingyao.entity.system.User" id="userResultMap">
		<id column="userId" property="userId"/>
		<result column="account" property="account"/>
		<result column="password" property="password"/>
		<result column="userName" property="userName"/>
	</resultMap>

	<select id="loginUser" parameterType="PageData" resultMap="userResultMap" useCache="false">
		SELECT *
		FROM sys_user
		WHERE 1=1
		AND account = #{account,jdbcType=VARCHAR}
		AND password = #{password,jdbcType=VARCHAR}
	</select>
	
	<!-- 分页查询 -->
	<select id="listPage" parameterType="page" resultType="PageData">
		select u.*,
		       co.company_name,
		       co.short_name,
		       ui.sex,
		       ui.birthday,
		       ui.phonenum,
		       ui.email,
		       ui.remark,
		       ui.job_title,
		       ui.creater,
		       ui.creattime
		  from SYS_USER u
		  join dict_company co
		  on co.company_id=u.company_id
		  join sys_user_info ui
		  on ui.user_id=u.user_id
		  order by u.sortnum
	</select>
	<!-- 用户列表(用户组) -->
	<select id="userlistPage" parameterType="page" resultType="PageData" useCache="false">
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u."NAME",
				u.IP,
				u.EMAIL,
				u."NUMBER",
				u.PHONE,
				r.ROLE_ID,
				r.ROLE_NAME
		from SYS_USER u, SYS_ROLE r,dict_zz_company_zw zw 
		where u.ROLE_ID = r.ROLE_ID 
		and zw.USER_ID=u.USER_ID
		and u.USERNAME != 'admin'
		and (r.ROLE_ID != '7' and r.PARENT_ID != '7')
		and u.STATE = 0
		<if test="pd.USERNAME != null and pd.USERNAME != ''"><!-- 关键词检索 -->
			and
				(
					 u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
					 or 
					 u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%') 
					 or
					 u."NUMBER" LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
					 or
					 u."NAME" LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
					 or
					 u.PHONE LIKE CONCAT(CONCAT('%', #{pd.USERNAME}),'%')
				)
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{pd.ROLE_ID} 
		</if>
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{pd.lastLoginStart} 
		</if>
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{pd.lastLoginEnd} 
		</if>
		<if test="pd.ZZXX_ID!= null and pd.ZZXX_ID != ''"><!-- 所属组织检索 -->
			and zw.ZZXX_ID LIKE CONCAT(CONCAT('%', #{pd.ZZXX_ID}),'%')
		</if>
		<if test="pd.COMPANY_ID!= null and pd.COMPANY_ID != ''"><!-- 所属单位检索 -->
			and zw.COMPANY_ID LIKE CONCAT(CONCAT('%', #{pd.COMPANY_ID}),'%')
		</if>
		order by u.create_time desc
	</select>
	<!-- 用户列表(全部) -->
	<select id="listAllUser" parameterType="PageData" resultType="PageData" useCache="false">
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u."NAME",
				u.IP,
				u.EMAIL,
				u."NUMBER",
				u.PHONE,
				r.ROLE_ID,
				r.ROLE_NAME
		from SYS_USER u, SYS_ROLE r 
		where u.ROLE_ID = r.ROLE_ID 
		and u.USERNAME != 'admin'
		and (r.ROLE_ID != '7' and r.PARENT_ID != '7')
		<if test="USERNAME != null and USERNAME != ''"><!-- 关键词检索 -->
			and
				(
					 u.USERNAME LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
					 or 
					 u.EMAIL LIKE CONCAT(CONCAT('%', #{USERNAME}),'%') 
					 or
					 u."NUMBER" LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
					 or
					 u."NAME" LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
					  or
					 u.PHONE LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
				)
		</if>
		<if test="COMPANY_ID != null and COMPANY_ID != ''"><!-- 单位检索 -->
			and u.COMPANY_ID=#{COMPANY_ID}
		</if>
		<if test="ROLE_ID != null and ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{ROLE_ID} 
		</if>
		<if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{lastLoginStart} 
		</if>
		<if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{lastLoginEnd} 
		</if>
		order by u.LAST_LOGIN desc
	</select>
	<!-- zzc 2018-6-8 根据参数分页查询 -->
	<select id="listPageByParameter" parameterType="page" resultType="PageData">
		select u.*,
		       co.company_name,
		       co.short_name,
		       ui.sex,
		       ui.birthday,
		       ui.phonenum,
		       ui.email,
		       ui.remark,
		       ui.job_title,
		       ui.creater,
		       ui.creattime,
		       ui.job,
		       ui.job_range,
		       ui.major
		  from SYS_USER u
		  join dict_company co
		  on co.company_id=u.company_id
		  join sys_user_info ui
		  on ui.user_id=u.user_id
		<if test="pd.DEPT_ID != null and pd.DEPT_ID != ''">
			join dict_dept dept
			on dept.dept_id=u.dept_id
			and dept.dept_id=#{pd.DEPT_ID}
		</if>
		 where 1=1
		<if test="pd.COMPANY_ID !=null and pd.COMPANY_ID != ''">
			and co.company_id=#{pd.COMPANY_ID}
		</if>
		<if test="pd.search!= null and pd.search != ''">
		  	and u.NAME LIKE CONCAT(CONCAT('%', #{pd.search}),'%')
		</if>
	</select>
	
	<select id="listLeftTree" parameterType="PageData" resultType="PageData">
	
	  select l.line_id ID, l.line_name NAME, '0' PARENTID,'1' LEVELS
        from dict_line l
      
      union
      
      select ct.comty_id ID, ct.comty_name NAME, to_char(ct.line_id) PARENTID,'2' LEVELS
        from dict_company_type ct
      
      union
      
      select b.bid_id ID, b.bid_name NAME, to_char(b.comty_id) PARENTID,'3' LEVELS
        from dict_bid b
        
      union
      
      select co.company_id ID,co.company_name NAME ,to_char(bco.bid_id) PARENTID ,'4' LEVELS from dict_bid_company bco,dict_company co where bco.company_id = co.company_id
    
	</select>
	<!-- 判断用户名和密码 -->
	<select id="getUserByLogin" parameterType="User" resultMap="userResultMap">
		select u.* 
		from SYS_USER u
		where u.STATE = 0
		<if test="USERNAME!=null and PASSWORD!=null">
		and USERNAME = #{USERNAME} and PASSWORD=#{PASSWORD}
		</if>
		<if test="USER_ID!=null and USER_ID!= ''">
		and USER_ID = #{USER_ID}
		</if>
	</select>


	
	<!-- 判断用户名和密码 -->
	<select id="getUserInfo" parameterType="PageData" resultType="PageData" useCache="false"><!-- insert update delete (flushCache="true/false") -->
		select u.*
		from SYS_USER u
		where 1=1
		AND u.STATE = 0
		<if test="USERNAME != null and PASSWORD != null">
		AND USERNAME = #{USERNAME} AND PASSWORD = #{PASSWORD}
		</if>
		<if test="USER_ID != null and USER_ID != ''">
		and USER_ID = #{USER_ID}
		</if>
	</select>
	
	<!-- 修改 -->
	<update id="editU" parameterType="PageData" flushCache="false">
		update  
			SYS_USER
		set 
			NAME= #{NAME,jdbcType=VARCHAR},
			where 
				USER_ID = #{USER_ID}
	</update>
	<!-- 换皮肤-->
	<update id="setSKIN" parameterType="PageData" flushCache="false">
		update SYS_USER set 
		SKIN = #{SKIN} 
		where USERNAME = #{USERNAME}
	</update>
	<!-- 新增用户 -->
	<insert id="saveUser" parameterType="PageData" flushCache="false">
		insert into SYS_USER (
			USER_ID,
			USERNAME,
			"PASSWORD",
			"NAME",
			COMPANY_ID,
			DEPT_ID,
			ISADMIN,
			SORTNUM,
			STATE
		) values (
			#{USER_ID},
			#{USERNAME},
			#{PASSWORD},
			#{NAME},
			#{COMPANY_ID},
			#{DEPT_ID},
			#{ISADMIN},
			#{SORTNUM},
			#{STATE}
		)
	</insert>
	<!-- 新增用户 -->
	<insert id="saveUserInfo" parameterType="PageData" flushCache="false">
		insert into SYS_USER_INFO (
			USER_ID,
			SEX,
			BIRTHDAY,
			PHONENUM,
			EMAIL,
			REMARK,
			JOB_TITLE,
			CREATER,
			CREATTIME,
			JOB,
			JOB_RANGE,
			MAJOR
		) values (
			#{USER_ID},
			#{SEX},
			#{BIRTHDAY},
			#{PHONENUM},
			#{EMAIL},
			#{REMARK},
			#{JOB_TITLE},
			#{CREATER},
			#{CREATTIME},
			#{JOB},
			#{JOB_RANGE},
			#{MAJOR}
		)
	</insert>
	<!-- 通过USERNAME获取数据 -->
	<select id="findByAccount" parameterType="PageData" resultType="PageData" useCache="false">
		select 
			*
		from 
			SYS_USER
		where 
			USERNAME = #{USERNAME}
	</select>
	<!-- 通过ID获取数据 -->
	<select id="findUsersById" parameterType="PageData" resultType="PageData">
		SELECT SYS_USER.USER_ID,
		       SYS_USER.USERNAME,
		       SYS_USER.NAME,
		       SYS_USER.SORTNUM,
		       SYS_USER.COMPANY_ID,
		       SYS_USER_INFO.SEX,
		       SYS_USER_INFO.BIRTHDAY,
		       SYS_USER_INFO.PHONENUM,
		       SYS_USER_INFO.EMAIL,
		       SYS_USER_INFO.REMARK,
		       SYS_USER_INFO.JOB_TITLE,
		       SYS_USER_INFO.JOB,
		       SYS_USER_INFO.JOB_RANGE,
		       SYS_USER_INFO.MAJOR,
		       DICT_COMPANY.COMPANY_NAME,
		       DICT_DEPT.DEPT_NAME
		  FROM SYS_USER
		  inner join SYS_USER_INFO
		  on SYS_USER.USER_ID = SYS_USER_INFO.USER_ID
		  inner join DICT_COMPANY
		  on DICT_COMPANY.COMPANY_ID = SYS_USER.COMPANY_ID
		  LEFT JOIN DICT_DEPT
		  on DICT_DEPT.DEPT_ID = SYS_USER.DEPT_ID
		 WHERE SYS_USER.USER_ID = #{USER_ID}
	</select>
	<!-- 更新用户信息 -->
	<update id="editUser" parameterType="PageData" flushCache="false">
		UPDATE SYS_USER 
		SET 
			USERNAME=#{USERNAME},
			NAME=#{NAME},
			SORTNUM=#{SORTNUM} 
		WHERE USER_ID=#{USER_ID}
	</update>
	<!-- 更新用户信息 -->
	<update id="editUserInfo" parameterType="PageData" flushCache="false">
		UPDATE SYS_USER_INFO
		   SET SEX       = #{SEX},
		       BIRTHDAY  = #{BIRTHDAY},
		       PHONENUM  = #{PHONENUM},
		       EMAIL     = #{EMAIL},
		       REMARK    = #{REMARK},
		       JOB_TITLE = #{JOB_TITLE},
		       JOB       = #{JOB},
		       JOB_RANGE = #{JOB_RANGE},
		       MAJOR     = #{MAJOR}
		 WHERE USER_ID = #{USER_ID}
	</update>
	<!-- 删除用户扩展 -->
	<delete id="deleteUserInfo" parameterType="PageData">
		delete from "SYS_USER_INFO"
		where "USER_ID" = #{USER_ID}
	</delete>
	<!-- 删除用户角色配置 -->
	<delete id="deleteUserRole" parameterType="PageData">
		delete from "SYS_USER_ROLE"
		where "USER_ID" = #{USER_ID}
	</delete>
	<!-- 删除用户关联工点-->
	<delete id="deleteUserLinkSite" parameterType="PageData">
		delete from "SYS_USER_SITE"
		where "USER_ID" = #{USER_ID}
	</delete>
	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="PageData">
		delete from "SYS_USER"
		where "USER_ID" = #{USER_ID}
	</delete>
	<!-- 批量删除用户 -->
	<delete id="deleteAllU" parameterType="String" flushCache="false">
		delete from SYS_USER
		where 
			USER_ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	<!-- 通过CompanyID获取COMTYPE数据 -->
	<select id="getCOMTYPEByCompanyID" parameterType="PageData" resultType="PageData">
		select distinct
			x.COMTY_ID,y.comty_name||'【'||z.SHORT_NAME||'】' comty_name,
			(SELECT (CASE WHEN COUNT(1)>0 THEN 1 ELSE 0 END) FROM SYS_USER_ROLE u,SYS_ROLE r,DICT_COMPANY_TYPE c 
				where u.user_id=#{USER_ID}
				and u.role_id=r.role_id
				and r.comty_id=c.comty_id
				and r.comty_id = x.comty_id) ISCHECKED
		from DICT_BID_COMPANY x,DICT_COMPANY_TYPE y,DICT_LINE z where x.comty_id=y.comty_id and y.LINE_ID=z.LINE_ID and x.COMPANY_ID=#{COMPANY_ID}
	</select>
	<!-- 通过CompanyID获取Lines数据 -->
	<select id="getLinesByCompanyID" parameterType="PageData" resultType="PageData">
		SELECT DISTINCT L.LINE_ID,L.LINE_NAME FROM DICT_BID_COMPANY B,DICT_LINE L
			WHERE B.LINE_ID=L.LINE_ID
			AND B.COMPANY_ID=#{COMPANY_ID}
	</select>
	<!-- 获取全部Lines数据 -->
	<select id="getAllLinesByCompanyID" parameterType="PageData" resultType="PageData">
		SELECT DISTINCT L.LINE_ID, L.LINE_NAME
			  FROM DICT_LINE L
			 WHERE L.LINE_ID NOT IN
			       (SELECT D.LINE_ID
			          FROM DICT_BID_COMPANY D, DICT_COMPANY_TYPE E
			         WHERE D.COMTY_ID = E.COMTY_ID
			           AND E.COMTY_DIC = 'construction')
	</select>
	<!-- 通过CompanyID、LineID获取COMTYPE数据 -->
	<select id="getCOMTYPEByCompanyIDandLineID" parameterType="PageData" resultType="PageData">
		select 
			x.COMTY_ID,y.comty_name
		from DICT_BID_COMPANY x,DICT_COMPANY_TYPE y,DICT_LINE z 
			where x.comty_id=y.comty_id 
			and y.LINE_ID=z.LINE_ID 
			and x.COMPANY_ID=#{COMPANY_ID}
			and z.LINE_ID = #{LINE_ID}
	</select>
	<!-- 通过CompanyID、LineID获取BD标段数据 -->
	<select id="getBDByCompanyIDandLineID" parameterType="PageData" resultType="PageData">
		select 
		    DISTINCT  y.bid_id,y.bid_name
		    from DICT_BID_COMPANY x,DICT_BID y
		      where x.bid_id=y.bid_id 
		      and x.comty_id=y.comty_id
		      and x.COMPANY_ID=#{COMPANY_ID}
		      and x.LINE_ID = #{LINE_ID}
		      and x.comty_id=#{COMTY_ID}
	</select>
	<!-- 通过标段ID获取工点数据 -->
	<select id="getSiteByLineID" parameterType="PageData" resultType="PageData">
		select 
		    DISTINCT x.site_id,x.site_name,(select (case when count(1)>0 then 1 else 0 end) from SYS_USER_SITE u where u.user_id=#{USER_ID} and u.site_id=x.site_id) ISCHECKED
		    from DICT_SITE x,DICT_BID_SITE y,DICT_BID_COMPANY z
	          where x.site_id=y.site_id
	          and y.bid_id=z.bid_id
	          and z.company_id=#{COMPANY_ID}
	          and y.line_id=#{LINE_ID}
	</select>
	<!-- 通过线路ID获取全部工点数据 -->
	<select id="getAllSiteByLineID" parameterType="PageData" resultType="PageData">
		select 
		    DISTINCT x.site_id,x.site_name,(select (case when count(1)>0 then 1 else 0 end) from SYS_USER_SITE u where u.user_id=#{USER_ID} and u.site_id=x.site_id) ISCHECKED
		    from DICT_SITE x,DICT_BID_SITE y
	          where x.site_id=y.site_id
	          and y.line_id=#{LINE_ID}
	</select>
	<!-- 通过COMPANY_ID获取roles数据 -->
	<select id="getRolesByCompanyID" parameterType="PageData" resultType="PageData">
		select r.ROLE_ID,r.ROLE_NAME,(SELECT (CASE WHEN COUNT(1)>0 THEN 1 ELSE 0 END) FROM SYS_USER_ROLE ur where ur.role_id=r.role_id and ur.user_id=#{USER_ID}) ISCHECKED from SYS_ROLE r
			where r.COMTY_ID=#{COMTY_ID}
	</select>
	<!-- 查询是否存已配置过角色 -->
	<select id="getExistRole" parameterType="PageData" resultType="PageData">
		select * from SYS_USER_ROLE where USER_ID=#{USER_ID} and ROLE_ID=#{ROLE_ID}
	</select>
	<!-- 查询是否存已配置过工点 -->
	<select id="getExistSite" parameterType="PageData" resultType="PageData">
		select * from SYS_USER_SITE where USER_ID=#{USER_ID} and SITE_ID=#{SITE_ID}
	</select>
	<!-- 判断是否为角色 -->
	<select id="getIsRole" parameterType="PageData" resultType="PageData">
		select * from SYS_ROLE where ROLE_ID=#{ROLE_ID}
	</select>
	<!-- 判断是否为工点 -->
	<select id="getIsSite" parameterType="PageData" resultType="PageData">
		select * from DICT_SITE where SITE_ID=#{SITE_ID}
	</select>
	<!-- 新增角色到SYS_USER_ROLE -->
	<insert id="saveRoleForUser" parameterType="PageData" flushCache="false">
		insert into SYS_USER_ROLE (
			USER_ROLE_ID,
			USER_ID,
			ROLE_ID
		) values (
			#{USER_ROLE_ID},
			#{USER_ID},
			#{ROLE_ID}
		)
	</insert>
	<!-- 新增工点到SYS_USER_SITE -->
	<insert id="saveSiteForUser" parameterType="PageData" flushCache="false">
		insert into SYS_USER_SITE (
			USER_SITE_ID,
			USER_ID,
			SITE_ID
		) values (
			#{USER_SITE_ID},
			#{USER_ID},
			#{SITE_ID}
		)
	</insert>
	<!--  删除取消选择的用户角色配置信息 -->
	<delete id="deleteRoleForUser" parameterType="PageData">
		delete from SYS_USER_ROLE where USER_ID = #{USER_ID} AND instr(#{roleIDS},ROLE_ID)&lt;=0
	</delete>
	<!--  删除取消选择的用户工点配置信息 -->
	<delete id="deleteSiteForUser" parameterType="PageData">
		delete from SYS_USER_SITE where USER_ID = #{USER_ID} AND instr(#{siteIDS},SITE_ID)&lt;=0
	</delete>
	<!-- 通过user_id获取数据包含对应中间表的信息 -->
	<select id="findByUiId" parameterType="PageData" resultType="PageData" >
		select 
			u.USER_ID,
			u.USERNAME,
			u.PASSWORD,
			u.NAME,
			u.RIGHTS,
			u.ROLE_ID,
			u.LAST_LOGIN,
			u.IP,
			u.STATE,
			u.BZ,
			u.SKIN,
			u.EMAIL,
			u.PHONE,
			zw.COMPANY_ID,
			zw.ZWXX_ID,
			zw.ZZXX_ID,
			gs.GD_ID,
			gs.XL_ID,
			gs.BD_ID
		from 
			SYS_USER u
		LEFT JOIN DICT_ZZ_COMPANY_ZW zw ON u.USER_ID = zw.USER_ID AND zw.DSTATE = 0
		LEFT JOIN DICT_XL_BD_GD_COMPANY gs ON u.USER_ID = gs.USER_ID AND gs.DSTATE = 0
		where 
			u.USER_ID = #{USER_ID}
	</select>
	<!-- 通过user_id只获取用户数据 -->
	<select id="findUserById" parameterType="PageData" resultType="PageData" useCache="false">
		select u.*,
<!-- 			u.USER_ID, -->
<!-- 			u.USERNAME, -->
<!-- 			u.PASSWORD, -->
<!-- 			u.NAME, -->
<!-- 			u.RIGHTS, -->
<!-- 			u.ROLE_ID, -->
<!-- 			u.LAST_LOGIN, -->
<!-- 			u.IP, -->
<!-- 			u.STATE, -->
<!-- 			u.BZ, -->
<!-- 			u.SKIN, -->
<!-- 			u.EMAIL, -->
<!-- 			u.PHONE, -->
			c.COMPANY_NAME,
			c.SHORT_NAME		
		from 
			SYS_USER u
		LEFT JOIN DICT_COMPANY c
		ON u.COMPANY_ID=c.COMPANY_ID
		where 
			u.USER_ID = #{USER_ID}
	</select>
	
	
	<!-- 通过邮箱获取数据 -->
	<select id="findByUE" parameterType="PageData" resultType="PageData" useCache="false">
		select 
			USER_ID,
			USERNAME,
			PASSWORD,
			"NAME",
			RIGHTS,
			ROLE_ID,
			LAST_LOGIN,
			IP,
			STATE,
			BZ,
			SKIN,
			EMAIL,
			"NUMBER",
			PHONE
		from 
			SYS_USER
		where 
			EMAIL = #{EMAIL}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	<!-- 通过编号获取数据 -->
	<select id="findByUN" parameterType="PageData" resultType="PageData" useCache="false">
		select 
			USER_ID,
			USERNAME,
			PASSWORD,
			"NAME",
			RIGHTS,
			ROLE_ID,
			LAST_LOGIN,
			IP,
			STATE,
			BZ,
			SKIN,
			EMAIL,
			"NUMBER",
			PHONE
		from 
			SYS_USER
		where 
			"NUMBER" = #{NUMBER}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	<!-- 存入IP -->
	<update id="saveIP" parameterType="PageData" flushCache="false">
		update SYS_USER 
			set 
				IP = #{IP}
			where 
				USERNAME = #{USERNAME}
	</update>
	<select id="getUserInfoByUserName" parameterType="PageData" resultType="PageData" useCache="false"><!-- insert update delete (flushCache="true/false") -->
		select u.*,zw.ZZXX_ID, zw.COMPANY_ID,zw.ZWXX_ID
		from SYS_USER u
		left join DICT_ZZ_COMPANY_ZW zw on u.USER_ID = zw.USER_ID and zw.DSTATE = 0
		where 1=1
		AND u.STATE = 0
		<if test="USERNAME != null">
		AND USERNAME = #{USERNAME}
		</if>
		<if test="USER_ID != null and USER_ID != ''">
		and USER_ID = #{USER_ID}
		</if>
	</select>
	<!-- 获取公司下用户 -->
	<select id="listCompanyUser" parameterType="PageData" resultType="PageData" useCache="false">
		SELECT u.*,
		c.COMPANY_NAME,
		c.SHORT_NAME
		FROM SYS_USER u
		INNER JOIN DICT_COMPANY c
		ON u.COMPANY_ID=c.COMPANY_ID
		WHERE  1=1
		<if test="COMPANY_ID != null and COMPANY_ID !='' ">
			and u.COMPANY_ID=#{COMPANY_ID}
		</if>
		<if test="USER != null and USER !='' ">
			and u.USER_ID!=#{USER}
		</if>
	</select>
	<!-- 根据条件过滤用户 -->
	<select id="listAllUserByCondition" parameterType="String" resultType="PageData" useCache="false">
		SELECT  
				u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.NAME,
				u.RIGHTS,
				u.ROLE_ID,
				u.LAST_LOGIN,
				u.IP,
				u.STATE,
				u.BZ,
				u.SKIN,
				u.EMAIL,
				u.PHONE,
				u.YTHBH,
				zw.COMPANY_ID,
				zw.ZWXX_ID,
				zw.ZZXX_ID, 
				gs.XL_ID,
				gs.BD_ID,
				gs.GD_ID
		FROM 
				SYS_USER u
		LEFT JOIN DICT_ZZ_COMPANY_ZW zw ON u.USER_ID = zw.USER_ID AND zw.DSTATE = 0
		LEFT JOIN DICT_XL_BD_GD_COMPANY gs ON u.USER_ID = gs.USER_ID AND gs.DSTATE = 0		
	 	WHERE
				1=1
				<if test="#{BD_ID}!=null and #{BD_ID}!=''">
					and gs.BD_ID=#{BD_ID}
				</if>
				<if test="#{ZZXX_ID}!=null and #{ZZXX_ID}!=''">
					and zw.ZZXX_ID=#{ZZXX_ID} 
				</if>
				<if test="#{ZWXX_ID}!=null and #{ZWXX_ID}!=''">
					and zw.ZWXX_ID=#{ZWXX_ID} 
				</if>
	</select>
  <!-- 通过USERNAME获取数据 -->
  <select id="findUserAndCompanyByUId" parameterType="PageData" resultType="PageData" useCache="false">
    select 
      s."USER_ID",
      s."USERNAME",
      s."PASSWORD",
      s."NAME",
      s."RIGHTS",
      s."ROLE_ID",
      s."LAST_LOGIN",
      s."IP",
      s."STATE",
      s."BZ",
      s."SKIN",
      s."EMAIL",
      s."NUMBER",
      s."PHONE",
      Z."COMPANY_ID"
    from 
      SYS_USER s,dict_zz_company_zw z
    where s.STATE ='0' and s.USER_ID=z.USER_ID and 
      USERNAME = #{USERNAME}
  </select>
  <select id="getUserOfCompany" parameterType="String" resultType="PageData" flushCache="false">
	select * from SYS_USER
	  where 
		USER_ID in
  		 <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
   </select>
	<insert id="insertLog" parameterType="PageData" flushCache="false">
	insert into SYS_LOGIN_LOG (
			ID,
			USERNAME,
			USERID
		) values (
			#{ID},
			#{USERNAME},
			#{USERID}
		)
	</insert>
	<select id="findByUserId" parameterType="PageData" resultType="PageData" useCache="false">
		select u.*
        from sys_user u
		where 
			u.USER_ID = #{USER_ID}
	</select>
	<select id="findGdByUserId" parameterType="PageData" resultType="PageData" useCache="false">
		select gd.gd_id, gd.gdmc
        from sys_user u
        inner join dict_xl_bd_gd_company xbg on u.user_id = xbg.user_id
        inner join dict_gd gd on gd.gd_id = xbg.gd_id
		where 
			u.USER_ID = #{USER_ID}
	</select>
	
	<!-- 查询全部用户及工程目录结构拼装树  -->
	<select id="listAllUserForTree" parameterType="PageData" resultType="PageData" useCache="false">
		select l.line_id ID, l.line_name NAME, '0' PARENTID,'1' LEVELS
			from dict_line l
		    
		union
		
		select ct.comty_id ID, ct.comty_name NAME, to_char(ct.line_id) PARENTID,'2' LEVELS
			from dict_company_type ct
		
		union
		
		select b.bid_id ID, b.bid_name NAME, to_char(b.comty_id) PARENTID,'3' LEVELS
			from dict_bid b
		  
		union
		
		select co.company_id ID,co.company_name NAME ,to_char(bco.bid_id) PARENTID ,'4' LEVELS from dict_bid_company bco,dict_company co where bco.company_id = co.company_id
		
		union
		
		select u.user_id ID,u.name NAME,to_char(u.company_id) PARENTID,'5' LEVELS from sys_user u
	</select>
	<!-- 判断是否为建设单位 -->
	<select id="IsConstruction" parameterType="PageData" resultType="Integer" useCache="false">
		select count(1) from DICT_BID_COMPANY x,DICT_COMPANY_TYPE y 
			where x.company_id=#{COMPANY_ID}
			and x.comty_id=y.comty_id
			and y.comty_dic='construction'
	</select>
	<!-- 判断用户是否关联工点 -->
	<select id="IsSetSite" parameterType="PageData" resultType="Integer" useCache="false">
		SELECT COUNT(1) FROM SYS_USER_SITE WHERE USER_ID=#{USER_ID}
	</select>
	
	<select id="listUserSite" parameterType="PageData" resultType="PageData">
		select s.*
		  from Sys_User_Site us
		  join dict_site s
		    on us.site_id = s.site_id
		 <if test="USER_ID != null and USER_ID != ''">
		 where us.user_id = #{USER_ID}
		 </if>
	</select>
	<update id="editPassword" parameterType="PageData" flushCache="false">
		update SYS_USER 
			set 
				PASSWORD = #{PASSWORD}
			where 
				USER_ID = #{USER_ID}
	</update>
	<select id="listAll" parameterType="PageData" resultType="PageData">
		SELECT u.*
		FROM SYS_USER u
		WHERE  1=1
		<if test="COMPANY_ID != null and COMPANY_ID !='' ">
			and u.COMPANY_ID=#{COMPANY_ID}
		</if>
	</select>
</mapper>